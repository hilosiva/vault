@charset "UTF-8";

/*! Oreset.css v2.0.0 | MIT License | https://github.com/hilosiva/Oreset.css */
/*
  # Global
---------------------------------------------- */
*,
::before,
::after {
  box-sizing: border-box;
  min-inline-size: 0;
  padding: 0;
  margin: 0;
}

/*
  # Document & Sections
---------------------------------------------- */
:where(html) {
  -webkit-text-size-adjust: none;
}

:where(body) {
  min-block-size: 100svb;
  overflow-x: clip;
  font-family: var(--font-sans-ja, system-ui, sans-serif);
  line-height: 1.5;
  overflow-wrap: anywhere;
  line-break: strict;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
}

/*
  # Grouping content
---------------------------------------------- */

:where(hr) {
  block-size: 0;
  overflow: visible;
  color: inherit;
  border: none;
  border-block-start: 1px solid;
}

:where(ul, ol) {
  list-style-type: "";
}

/*
  # Text-level semantics
---------------------------------------------- */
:where(b, strong) {
  font-weight: 700;
}

:where(i, cite, em, dfn, var) {
  font-style: inherit;
}

:where(small) {
  font-size: inherit;
}

:where(:any-link) {
  color: unset;
  -webkit-text-decoration-skip: ink;
  text-decoration-skip-ink: auto;
  text-underline-offset: 0.25em;
}

/*
  # Embedded content
---------------------------------------------- */
:where(img, svg, video, canvas, audio, iframe, embed, object) {
  display: block;
}

:where(img, picture, svg) {
  max-inline-size: 100%;
  block-size: auto;
}

:where(svg:not([fill])) {
  fill: currentColor;
}

/*
  # Tabular data
---------------------------------------------- */
:where(table) {
  border-collapse: collapse;
}

/*
  # Forms
---------------------------------------------- */
:where(input, button, textarea, select, optgroup) {
  font: inherit;
  color: inherit;
}

:where(textarea) {
  resize: vertical;
  resize: block;
}

:where(button, label, select, summary, [role="button"], [role="option"]) {
  cursor: pointer;
}

:where(input[type="file"])::-webkit-file-upload-button,
:where(input[type="file"])::file-selector-button {
  cursor: pointer;
}

:where(:disabled) {
  cursor: not-allowed;
}

:where(label:has(> input:disabled), label:has(+ input:disabled)) {
  cursor: not-allowed;
}

:where(button) {
  border-style: solid;
}

/*
  # Interactive & Misc
---------------------------------------------- */
:where(template, [hidden]:not([hidden="until-found"])) {
  display: none;
}

:where(dialog, [popover]) {
  inset: unset;
  max-width: unset;
  max-height: unset;
  color: inherit;
  background: none;
  border: none;
}

:where(dialog:not([open], [popover]), [popover]:not(:popover-open)) {
  display: none;
}
/*
  # Accessibility
---------------------------------------------- */
:where([disabled], [aria-disabled="true"]) {
  cursor: not-allowed;
}

:where([aria-busy="true"]) {
  cursor: progress;
}

:where([aria-controls]) {
  cursor: pointer;
}

:where([aria-hidden="false"][hidden]) {
  display: initial;
}

:where([aria-hidden="false"][hidden]):not(:focus) {
  position: absolute;
  clip: rect(0, 0, 0, 0);
}

:where(:focus:not(:focus-visible), ::before:focus:not(:focus-visible), ::after:focus:not(:focus-visible)) {
  outline: none;
}

/**
 * Prettier ignore
 */
@media (prefers-reduced-motion: reduce) {
  *,
  *:before,
  *:after,
  ::backdrop {
    transition: none !important;
    animation: none !important;
    scroll-behavior: auto !important;
  }
}
