.l-grid {
  --grid-layout: minmax(0, 1fr);
  --grid-auto-fit: minmax(min(var(--min-size, 300px), 100%), 1fr);

  display: block grid;
  grid-template-columns: var(--grid-cols, none);

  &:where([style~="--cols:"]) {
    --grid-cols: repeat(var(--cols), var(--grid-layout));
  }

  &:where([style~="--xxs-cols:"]) {
    @media (--xxs) {
      --grid-cols: repeat(var(--xxs-cols), var(--grid-layout));
    }
  }

  &:where([style~="--xs-cols:"]) {
    @media (--xs) {
      --grid-cols: repeat(var(--xs-cols), var(--grid-layout));
    }
  }

  &:where([style~="--sm-cols:"]) {
    @media (--sm) {
      --grid-cols: repeat(var(--sm-cols), var(--grid-layout));
    }
  }

  &:where([style~="--md-cols:"]) {
    @media (--md) {
      --grid-cols: repeat(var(--md-cols), var(--grid-layout));
    }
  }

  &:where([style~="--lg-cols:"]) {
    @media (--lg) {
      --grid-cols: repeat(var(--lg-cols), var(--grid-layout));
    }
  }

  &:where([style~="--xl-cols:"]) {
    @media (--xl) {
      --grid-cols: repeat(var(--xl-cols), var(--grid-layout));
    }
  }

  &:where([style~="--xxl-cols:"]) {
    @media (--xxl) {
      --grid-cols: repeat(var(--xxl-cols), var(--grid-layout));
    }
  }

  &:where([style*="--cols: auto-fit"]),
  &:where([style*="--cols:auto-fit"]) {
    --grid-cols: repeat(var(--cols), var(--grid-auto-fit));
  }
}
